name: Development Integration

env:
  HELM_VERSION: 3.13.2
  NAMESPACE: medcol-dev

on:
  push:
    branches: ["main"]

permissions:
  contents: read
  packages: read

jobs:

  check:
    name: Checks
    uses: rerad-io/rerad-devops/.github/workflows/code-quality.yaml@main
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    name: Build
    needs: ['check']
    uses: rerad-io/rerad-devops/.github/workflows/docker-image.yaml@main
    with:
      ECR_REPOSITORY: atlas-front
      environment: development
      setLatest: true
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      DOT_ENV: |
        VITE_BACKEND_API=https://api.d.medcol.io
        VITE_ENVIRONMENT=development
        VITE_RELEASE=0.0.1

  deploy:
    name: Deploy
    needs: ["build"]
    runs-on: dev-runner
    environment: development
    env:
      APP: atlas-front
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: install helm
        uses: Azure/setup-helm@v3
        with:
          version: ${{ env.HELM_VERSION }}
      - name: Set kubeconfig
        uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG_DATA }}
      - name: Upgrade helm release
        env:
          HELM_EXPERIMENTAL_OCI: 1
        run: |
          echo  ${{ secrets.GH_PACKAGE_REPO_PASSWORD }} | helm registry login ghcr.io/${{ github.repository_owner }}/rerad-devops --username ${{ github.repository_owner }} --password-stdin
          helm upgrade ${{ env.APP }} --install oci://ghcr.io/${{ github.repository_owner }}/rerad-devops/universal-front --version 1.1.0 --namespace ${{ env.NAMESPACE }} \
          -f helm-values.yaml \
          -f helm-values.dev.yaml \
          --set image.tag=${{ github.sha }} \
          --set ingress.hosts\[0\].host=dev.d.medcol.io \
          --set ingress.hosts\[0\].paths\[0\]=/atlas \
          --debug \
          --wait
